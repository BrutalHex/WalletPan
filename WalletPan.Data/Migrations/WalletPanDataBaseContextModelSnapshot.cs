// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WalletPan.Data;

namespace WalletPan.Data.Migrations
{
    [DbContext(typeof(WalletPanDataBaseContext))]
    partial class WalletPanDataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WalletPan.Domain.Entity.CryptoCurrencyEntity", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CryptoCurrency_Key")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnName("CryptoCurrency_Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnName("CryptoCurrency_Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("CryptoCurrency","dbo");
                });

            modelBuilder.Entity("WalletPan.Domain.Entity.CryptoCurrencyServerEntity", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CryptoCurrencyServer_Key")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("CryptoCurrencyServer_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CryptoCurrencyKey")
                        .HasColumnName("CryptoCurrency_Key")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnName("CryptoCurrencyServer_Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.HasIndex("CryptoCurrencyKey");

                    b.ToTable("CryptoCurrencyServer","dbo");
                });

            modelBuilder.Entity("WalletPan.Domain.Entity.CryptoCurrencyServerEntity", b =>
                {
                    b.HasOne("WalletPan.Domain.Entity.CryptoCurrencyEntity", "CryptoCurrencyEntity")
                        .WithMany("CryptoCurrencyServerEntities")
                        .HasForeignKey("CryptoCurrencyKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
